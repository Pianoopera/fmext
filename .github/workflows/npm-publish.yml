# GitHub Actions workflow for publishing Deno CLI as NPM package
name: NPM Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Update version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          # Create dist directory
          mkdir -p dist
          
          # Build for each platform (same as local)
          echo "Building Linux x64..."
          deno compile --allow-read --target x86_64-unknown-linux-gnu --output dist/fmext-linux-x64 mod.ts
          
          echo "Building macOS x64..."
          deno compile --allow-read --target x86_64-apple-darwin --output dist/fmext-macos-x64 mod.ts
          
          echo "Building macOS ARM64..."
          deno compile --allow-read --target aarch64-apple-darwin --output dist/fmext-macos-arm64 mod.ts
          
          echo "Building Windows x64..."
          deno compile --allow-read --target x86_64-pc-windows-msvc --output dist/fmext-windows-x64.exe mod.ts
          
          # Set execute permissions
          chmod +x dist/fmext-linux-x64
          chmod +x dist/fmext-macos-x64
          chmod +x dist/fmext-macos-arm64
          
          # List files to verify
          echo "Built binaries:"
          ls -la dist/

      - name: Pack and verify
        run: |
          # Pack the package
          npm pack
          
          # Check what's in the package
          echo "Package contents:"
          tar -tzf *.tgz | head -20

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit and push version change
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
          git push origin main
          
          # Create and push tag
          git tag "v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Summary
        run: |
          echo "‚úÖ Successfully published fmext@${{ env.NEW_VERSION }} to npm"
          echo "üì¶ Package: https://www.npmjs.com/package/fmext"
          echo "üè∑Ô∏è Tag: v${{ env.NEW_VERSION }}"